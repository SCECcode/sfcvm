FROM ubuntu:20.04 as os-update
LABEL maintainer="Brad Aagaard <baagaard@usgs.gov>"

RUN apt-get update \
    && DEBIAN_FRONTEND="noninteractive" apt-get install -y --no-install-recommends \
      g++ \
      make \
      file \
      automake \
      autoconf \
      libtool \
      curl \
      locales \
      libpython3.8 \
      python3-dev \
      python3-venv \
      python3-pip \
      python3-setuptools \
      python3-numpy \
      python3-coverage \
      python3-autopep8 \
      python3-h5py \
      python3-enchant \
      cython3 \
      zlib1g-dev \
      unzip \
      git \
      ca-certificates \
      libcppunit-dev \
      hdf5-tools \
      libhdf5-dev \
      sqlite3 \
      libsqlite3-0 \
      libsqlite3-dev \
      proj-bin \
      proj-data \
      libproj-dev \
      gdal-bin \
      libgdal-dev \
      swig \
      lcov \
      gdb \
      valgrind \
      tree \
      less \
      uncrustify \
      libenchant-2-2 \
      gnupg2 \
      vim-common \
      vim-runtime \
      vim-nox

COPY docker/certs/ /usr/local/share/ca-certificates
RUN update-ca-certificates

ENV PYTHON_VERSION 3.8
ENV HDF5_INCDIR=/usr/include/hdf5/serial  HDF5_LIBDIR=/usr/lib/x86_64-linux-gnu/hdf5/serial

# ------------------------------------------------------------------------------
from os-update as user-setup

# Base directory is /opt/geomodelgrids (docker volume for persistent storage)

# Create 'gmg-user' user
ENV GMG_USER gmg-dev
RUN useradd --create-home --shell /bin/bash $GMG_USER
ENV  BASE_DIR=/opt/geomodelgrids  HOME=/home/$GMG_USER
ENV  INSTALL_DIR=$BASE_DIR/dest/debug  TOP_SRCDIR=$BASE_DIR/src  TOP_BUILDDIR=$BASE_DIR/build/debug
ENV  GEOMODELGRIDS_BUILDDIR=${TOP_BUILDDIR}  \
    PYTHON_INCDIR=/usr/include/python3.8 \
    MPI_INCDIR=/usr/include \
    PROJ_INCDIR=/usr/include \
    CPPUNIT_INCDIR=/usr/include

ENV LD_LIBRARY_PATH=$INSTALL_DIR/lib

# ------------------------------------------------------------------------------
RUN python3 -m venv --system-site-packages ${INSTALL_DIR} \
    && /bin/bash -c 'source ${INSTALL_DIR}/bin/activate' \
    && python3 -m pip install --upgrade pip setuptools \
    && python3 -m pip install sphinx myst-parser pydata-sphinx-theme sphinxcontrib.bibtex sphinxcontrib-spelling


WORKDIR $HOME
RUN mkdir -p ${BASE_DIR} \
  && chown ${GMG_USER} ${BASE_DIR} \
  && chgrp ${GMG_USER} ${BASE_DIR}
USER ${GMG_USER}


CMD /bin/bash -c 'source ${INSTALL_DIR}/bin/activate'
